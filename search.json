[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 testex authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/articles/configuration.html","id":"testthat","dir":"Articles","previous_headings":"","what":"testthat","title":"Configuration","text":"Running tests using testthat simple. Just use add simple, one-line file tests/testthat directory containing adding single line testthat test file (tests/testthat/test-testex.R), example tests included part test suite. run way, testex tests embedded additional metadata including original file location examples testthat able provide informative error messages.","code":"testex::use_testex_as_testthat() testex::test_examples_as_testthat()"},{"path":"/articles/configuration.html","id":"r-cmd-check","dir":"Articles","previous_headings":"","what":"R CMD check","title":"Configuration","text":"default, tests run run examples using R CMD check. However, R CMD check stop first error truncates error output, can inconvenient debugging. ’d prefer run tests checking, can add following line DESCRIPTION.","code":"Config/testex/options: list(check = FALSE)"},{"path":"/articles/interface_layers.html","id":"base-building-blocks","dir":"Articles","previous_headings":"","what":"Base building-blocks","title":"Interface Layers","text":"R examples can include test code! Even ’re using testex, can already add tests examples! use .Last.value grab result last example test expected value. Though, might expect, can’t easily add another test .Last.value changed. testex provides familiar interface managing just : Already testex bit work make lives easier. .Last.value propagated tests can use convenient shorthand . refer value want test.","code":"\\examples{ identity(\"hello, world\") \\testonly{   stopifnot(.Last.value == \"hello, world\") } } \\examples{ identity(\"hello, world\") \\testonly{testex::testex(   is.character(.),   . == \"hello, world\") )} }"},{"path":"/articles/interface_layers.html","id":"use-a-roxygen2-tag","dir":"Articles","previous_headings":"","what":"Use a roxygen2 tag!","title":"Interface Layers","text":"’re already using roxygen2, things get even easier! roxygen2 can make use new tags provided testex: running roxygen2::roxygenize(), can take peak Rd files see code translated testex tests.","code":"#' Hello, World! #'  #' @examples #'  #' hello(\"World\") #' @test \"Hello, World!\" #' #' hello(\"darkness my old friend\") #' @test grepl(\"darkness\", .) #'  #' @export hello <- function(who) {   paste0(\"Hello, \", who, \"!\") }"},{"path":"/articles/interface_layers.html","id":"leverage-testthat-expectations","dir":"Articles","previous_headings":"","what":"Leverage testthat expectations","title":"Interface Layers","text":"convenience tag also provide prefer testthat style testing. testthat provides wealth expectation functions, can used conjunction testex write familiar tests. @testthat tag automatically insert .Last.value previous example first argument expectation. Multiple consecutive @testthat expectations test previous example output.","code":"#' Hello, World! #'  #' @examples #'  #' hello(\"World\") #' @testthat expect_equal(\"Hello, World!\") #' #' hello(\"testthat my old friend\") #' @testthat expect_match(\"testthat\") #'  #' @export hello <- function(who) {   paste0(\"Hello, \", who, \"!\") }"},{"path":"/articles/interface_layers.html","id":"other-test-suites","dir":"Articles","previous_headings":"","what":"Other Test Suites?","title":"Interface Layers","text":", course, plenty flavors testing suites. Thankfully, testex quite versatile Rd code used foundation everything else. want see support another framework, please open issue!","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Doug Kelkhoff. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Kelkhoff D (2024). testex: Add Tests Examples. R package version 0.1.0, https://dgkf.github.io/testex/, https://github.com/dgkf/testex.","code":"@Manual{,   title = {testex: Add Tests to Examples},   author = {Doug Kelkhoff},   year = {2024},   note = {R package version 0.1.0, https://dgkf.github.io/testex/},   url = {https://github.com/dgkf/testex}, }"},{"path":"/index.html","id":"testex-test-examples-","dir":"","previous_headings":"","what":"Add Tests to Examples","title":"Add Tests to Examples","text":"Add tests assertions -line examples","code":""},{"path":"/index.html","id":"quick-start","dir":"","previous_headings":"","what":"Quick Start","title":"Add Tests to Examples","text":"Set package use testex using start adding tests! already using testthat, ’ll immediately see new test context testing examples. aren’t using testthat, ’ll find tests run examples run R CMD check","code":"testex::use_testex() #' Hello, World! #'  #' @examples #' hello(\"World\") #' @test \"Hello, World!\" #' #' hello(\"darkness my old friend\") #' @test grepl(\"darkness\", .) #'  #' @export hello <- function(who) {   paste0(\"Hello, \", who, \"!\") }"},{"path":[]},{"path":"/index.html","id":"test","dir":"","previous_headings":"roxygen2 tags","what":"@test","title":"Add Tests to Examples","text":"check result last example identical test. can use example output function using ..","code":"#' @examples #' sum(1:10) #' @test 55 #' @test is.numeric(.)"},{"path":"/index.html","id":"testthat","dir":"","previous_headings":"roxygen2 tags","what":"@testthat","title":"Add Tests to Examples","text":"similar, added benefit automatically inserting . testthat::expect_* functions.","code":"#' @examples #' sum(1:10) #' @testthat expect_equal(55) #' @testthat expect_vector(numeric())"},{"path":"/index.html","id":"prior-art","dir":"","previous_headings":"","what":"Prior Art","title":"Add Tests to Examples","text":"roxytest slightly different approach. Allows tests written -line, generates test files used directly testing framework.","code":""},{"path":"/reference/as.srcref.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert to srcref — as.srcref","title":"Convert to srcref — as.srcref","text":"Convert srcref","code":""},{"path":"/reference/as.srcref.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert to srcref — as.srcref","text":"","code":"as.srcref(x)  # S3 method for character as.srcref(x)"},{"path":"/reference/as.srcref.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert to srcref — as.srcref","text":"x object coerce","code":""},{"path":"/reference/as.srcref.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert to srcref — as.srcref","text":"srcref","code":""},{"path":"/reference/as.srcref.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Convert to srcref — as.srcref","text":".srcref(character): Convert srcref_key srcref object","code":""},{"path":"/reference/deparse_indent.html","id":null,"dir":"Reference","previous_headings":"","what":"Deparse an expression and indent for pretty-printing — deparse_indent","title":"Deparse an expression and indent for pretty-printing — deparse_indent","text":"Deparse expression indent pretty-printing","code":""},{"path":"/reference/deparse_indent.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deparse an expression and indent for pretty-printing — deparse_indent","text":"","code":"deparse_indent(x, indent = 0L)"},{"path":"/reference/deparse_indent.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Deparse an expression and indent for pretty-printing — deparse_indent","text":"x code object indent integer number spaces string prefix line deparsed output.","code":""},{"path":"/reference/deparse_indent.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Deparse an expression and indent for pretty-printing — deparse_indent","text":"indented version deparsed string x.","code":""},{"path":"/reference/deparse_pretty.html","id":null,"dir":"Reference","previous_headings":"","what":"Deparse pretty — deparse_pretty","title":"Deparse pretty — deparse_pretty","text":"Deparse single string two spaces indentation","code":""},{"path":"/reference/deparse_pretty.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deparse pretty — deparse_pretty","text":"","code":"deparse_pretty(expr)"},{"path":"/reference/deparse_pretty.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Deparse pretty — deparse_pretty","text":"expr expression deparse","code":""},{"path":"/reference/deparse_pretty.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Deparse pretty — deparse_pretty","text":"pretty-formatted string representation expr.","code":""},{"path":"/reference/file_line_nchar.html","id":null,"dir":"Reference","previous_headings":"","what":"Return the number of characters in a line of a file — file_line_nchar","title":"Return the number of characters in a line of a file — file_line_nchar","text":"Return number characters line file","code":""},{"path":"/reference/file_line_nchar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return the number of characters in a line of a file — file_line_nchar","text":"","code":"file_line_nchar(file, line)"},{"path":"/reference/file_line_nchar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return the number of characters in a line of a file — file_line_nchar","text":"file file use reference line line number retrieve length ","code":""},{"path":"/reference/file_line_nchar.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return the number of characters in a line of a file — file_line_nchar","text":"number characters line line.","code":""},{"path":"/reference/get_example_value.html","id":null,"dir":"Reference","previous_headings":"","what":"Determine which symbol to use by default when testing examples — get_example_value","title":"Determine which symbol to use by default when testing examples — get_example_value","text":"Determine symbol use default testing examples","code":""},{"path":"/reference/get_example_value.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Determine which symbol to use by default when testing examples — get_example_value","text":"","code":"get_example_value()"},{"path":"/reference/get_example_value.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Determine which symbol to use by default when testing examples — get_example_value","text":"value last test expression","code":""},{"path":"/reference/is_r_cmd_check.html","id":null,"dir":"Reference","previous_headings":"","what":"Test whether currently executing R checks — is_r_cmd_check","title":"Test whether currently executing R checks — is_r_cmd_check","text":"Test whether currently executing R checks","code":""},{"path":"/reference/is_r_cmd_check.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test whether currently executing R checks — is_r_cmd_check","text":"","code":"is_r_cmd_check()"},{"path":"/reference/is_r_cmd_check.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Test whether currently executing R checks — is_r_cmd_check","text":"logical indicating whether R CMD check currently running","code":""},{"path":"/reference/package-file-helpers.html","id":null,"dir":"Reference","previous_headings":"","what":"Package source file helpers — package-file-helpers","title":"Package source file helpers — package-file-helpers","text":"Discover specific package related file paths","code":""},{"path":"/reference/package-file-helpers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Package source file helpers — package-file-helpers","text":"","code":"find_package_root(path = \".\", quiet = FALSE)  find_package_rds(package, path = getwd())  package_desc()"},{"path":"/reference/package-file-helpers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Package source file helpers — package-file-helpers","text":"path file path within package's source code installation directory. considered package missing. quiet Whether suppress output package package name","code":""},{"path":"/reference/package-file-helpers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Package source file helpers — package-file-helpers","text":"NULL, invisibly list package Rd objects, returned tools::Rd_db()","code":""},{"path":"/reference/s3_register.html","id":null,"dir":"Reference","previous_headings":"","what":"Register a method for a suggested dependency — s3_register","title":"Register a method for a suggested dependency — s3_register","text":"Generally, recommend way register S3 method use S3Method() namespace directive (often generated automatically @export roxygen2 tag). However, technique requires generic imported package, sometimes want suggest package, provide method package loaded. s3_register() can called package's .onLoad() dynamically register method generic's package loaded.","code":""},{"path":"/reference/s3_register.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Register a method for a suggested dependency — s3_register","text":"generic Name generic form pkg::generic. class Name class method Optionally, implementation method. default, found looking function called generic.class package environment. Note providing method can dangerous use devtools. namespace method reloaded devtools::load_all(), function keep inheriting old namespace. might cause crashes dangling .Call() pointers.","code":""},{"path":"/reference/s3_register.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Register a method for a suggested dependency — s3_register","text":"return value, called side-effect registering S3 generic.","code":""},{"path":"/reference/s3_register.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Register a method for a suggested dependency — s3_register","text":"R 3.5.0 later, s3_register() also useful demonstrating class creation vignette, since method lookup longer always involves lexical scope. R 3.6.0 later, can achieve similar effect using \"delayed method registration\", .e. placing following NAMESPACE file:","code":"if (getRversion() >= \"3.6.0\") {   S3method(package::generic, class) }"},{"path":"/reference/s3_register.html","id":"usage-in-other-packages","dir":"Reference","previous_headings":"","what":"Usage in other packages","title":"Register a method for a suggested dependency — s3_register","text":"avoid taking dependency vctrs, copy source s3_register() package. licensed permissive unlicense make crystal clear happy . need include license even credit us using function.","code":""},{"path":"/reference/s3_register.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Register a method for a suggested dependency — s3_register","text":"","code":"# A typical use case is to dynamically register tibble/pillar methods # for your class. That way you avoid creating a hard dependency on packages # that are not essential, while still providing finer control over # printing when they are used.  .onLoad <- function(...) {   s3_register(\"pillar::pillar_shaft\", \"vctrs_vctr\")   s3_register(\"tibble::type_sum\", \"vctrs_vctr\") }"},{"path":"/reference/split_srcref.html","id":null,"dir":"Reference","previous_headings":"","what":"Split a Source Reference at specific lines — split_srcref","title":"Split a Source Reference at specific lines — split_srcref","text":"Split Source Reference specific lines","code":""},{"path":"/reference/split_srcref.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Split a Source Reference at specific lines — split_srcref","text":"","code":"split_srcref(sr, where)"},{"path":"/reference/split_srcref.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Split a Source Reference at specific lines — split_srcref","text":"sr original srcref object numeric vector line numbers srcref split","code":""},{"path":"/reference/split_srcref.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Split a Source Reference at specific lines — split_srcref","text":"list srcref","code":""},{"path":"/reference/srclocs.html","id":null,"dir":"Reference","previous_headings":"","what":"Build a source location from a minimal numeric vector — srclocs","title":"Build a source location from a minimal numeric vector — srclocs","text":"Build length four source location length two source location. starting column first line assumed 1, final column taken length line source file exists, 1 fallback.","code":""},{"path":"/reference/srclocs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build a source location from a minimal numeric vector — srclocs","text":"","code":"srclocs(x, file)"},{"path":"/reference/srclocs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build a source location from a minimal numeric vector — srclocs","text":"x numeric vector least length 2 file file use determine length final line","code":""},{"path":"/reference/srclocs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Build a source location from a minimal numeric vector — srclocs","text":"numeric vector similar utils::getSrcLocation object","code":""},{"path":"/reference/srcref_key.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a srcref to a character representation — srcref_key","title":"Convert a srcref to a character representation — srcref_key","text":"Convert srcref character representation","code":""},{"path":"/reference/srcref_key.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a srcref to a character representation — srcref_key","text":"","code":"srcref_key(x, nloc = 2, path = c(\"base\", \"root\", \"full\"))"},{"path":"/reference/srcref_key.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a srcref to a character representation — srcref_key","text":"x srcref object nloc number locations (utils::getSrcLocation) use. Defaults 2, indicating starting ending line number. path form file path use key. One \"base\" basename source file path, \"root\" path relative package root directory found, \"full\" full file path.","code":""},{"path":"/reference/srcref_key.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a srcref to a character representation — srcref_key","text":"string hash srcref","code":""},{"path":"/reference/srcref_nlines.html","id":null,"dir":"Reference","previous_headings":"","what":"Determine the number of source code lines of a given srcref — srcref_nlines","title":"Determine the number of source code lines of a given srcref — srcref_nlines","text":"Determine number source code lines given srcref","code":""},{"path":"/reference/srcref_nlines.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Determine the number of source code lines of a given srcref — srcref_nlines","text":"","code":"srcref_nlines(x)"},{"path":"/reference/srcref_nlines.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Determine the number of source code lines of a given srcref — srcref_nlines","text":"x srcref object","code":""},{"path":"/reference/srcref_nlines.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Determine the number of source code lines of a given srcref — srcref_nlines","text":"number lines original source srcref","code":""},{"path":"/reference/string_newline_count.html","id":null,"dir":"Reference","previous_headings":"","what":"Get String Line Count — string_newline_count","title":"Get String Line Count — string_newline_count","text":"Get String Line Count","code":""},{"path":"/reference/string_newline_count.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get String Line Count — string_newline_count","text":"","code":"string_newline_count(x)"},{"path":"/reference/string_newline_count.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get String Line Count — string_newline_count","text":"x character value","code":""},{"path":"/reference/string_newline_count.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get String Line Count — string_newline_count","text":"number newline characters multiline string","code":""},{"path":"/reference/test_examples_as_testthat.html","id":null,"dir":"Reference","previous_headings":"","what":"Execute examples from Rd files as testthat tests — test_examples_as_testthat","title":"Execute examples from Rd files as testthat tests — test_examples_as_testthat","text":"Reads examples Rd files constructs testthat-style tests. testthat expectations built ","code":""},{"path":"/reference/test_examples_as_testthat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Execute examples from Rd files as testthat tests — test_examples_as_testthat","text":"","code":"test_examples_as_testthat(   package,   path,   ...,   test_dir = tempfile(\"testex\"),   clean = TRUE,   overwrite = TRUE,   reporter = testthat::get_reporter() )"},{"path":"/reference/test_examples_as_testthat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Execute examples from Rd files as testthat tests — test_examples_as_testthat","text":"package package name whose examples tested path Optionally, path source code directory use. effect parameter package missing. ... Additional argument unused test_dir option directory test files written. Defaults temporary directory. clean Whether test_dir removed upon completion test execution. Defaults TRUE. overwrite Whether files overwritten test_dir already exists. Defaults TRUE. reporter testthat reporter use. Defaults active reporter testthat environment default reporter.","code":""},{"path":"/reference/test_examples_as_testthat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Execute examples from Rd files as testthat tests — test_examples_as_testthat","text":"result testthat::source_file(), iterating generated test files.","code":""},{"path":"/reference/test_examples_as_testthat.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Execute examples from Rd files as testthat tests — test_examples_as_testthat","text":"example expression expected run without error testex expectations expected pass Generally, need use function directly. Instead, called file generated use_testex_as_testthat() add testex example tests existing testthat testing suite.","code":""},{"path":"/reference/test_examples_as_testthat.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Execute examples from Rd files as testthat tests — test_examples_as_testthat","text":"assumed function used within testthat run, necessary packages already installed loaded.","code":""},{"path":"/reference/test_examples_as_testthat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Execute examples from Rd files as testthat tests — test_examples_as_testthat","text":"","code":"# \\donttest{ # library(pkg.example) path <- system.file(\"pkg.example\", package = \"testex\") test_examples_as_testthat(path = path) #> ── Failure (fn.Rd:20:1): example executes without error ──────────────────────── #> Expected `fn(\"testing\")` to run without any errors. #> ℹ Actually got a <simpleError> with text: #>   could not find function \"fn\" #>  #> ── Failure (fn_roxygen.Rd:19:1): example executes without error ──────────────── #> Expected `{ ... }` to run without any errors. #> ℹ Actually got a <simpleError> with text: #>   could not find function \"fn_roxygen\" #>  #> ── Failure (fn_roxygen_multiple.Rd:29:1): example executes without error ─────── #> Expected `fn_roxygen_multiple1(\"testing\")` to run without any errors. #> ℹ Actually got a <simpleError> with text: #>   could not find function \"fn_roxygen_multiple1\" #>  #> ── Failure (fn_roxygen_testthat.Rd:19:1): example executes without error ─────── #> Expected `fn_roxygen_testthat(\"testing\")` to run without any errors. #> ℹ Actually got a <simpleError> with text: #>   could not find function \"fn_roxygen_testthat\" #>  # }"},{"path":"/reference/test_files.html","id":null,"dir":"Reference","previous_headings":"","what":"Test a list of files — test_files","title":"Test a list of files — test_files","text":"Test list files","code":""},{"path":"/reference/test_files.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test a list of files — test_files","text":"","code":"test_files(files, context, ...)"},{"path":"/reference/test_files.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test a list of files — test_files","text":"files collection file paths test context optional context message display testthat reporters ... Additional arguments passed testhat::source_file","code":""},{"path":"/reference/test_files.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Test a list of files — test_files","text":"result testthat::source_file(), iterating generated test files.","code":""},{"path":"/reference/testex-options.html","id":null,"dir":"Reference","previous_headings":"","what":"Cached retrieval of testex options from package DESCRIPTION — testex-options","title":"Cached retrieval of testex options from package DESCRIPTION — testex-options","text":"long fingerprint changed, package DESCRIPTION read parse retrieve configuration options. DESCRIPTION file modified run separate process, configured settings refreshed based recent version file.","code":""},{"path":"/reference/testex-options.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cached retrieval of testex options from package DESCRIPTION — testex-options","text":"","code":"update_testex_desc(path, fingerprint)  testex_options(path = package_desc())"},{"path":"/reference/testex-options.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cached retrieval of testex options from package DESCRIPTION — testex-options","text":"path path search package DESCRIPTION fingerprint object used indicate cached values invalidated","code":""},{"path":"/reference/testex-options.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cached retrieval of testex options from package DESCRIPTION — testex-options","text":"test options environment, invisibly. test options environment list","code":""},{"path":"/reference/testex-options.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Cached retrieval of testex options from package DESCRIPTION — testex-options","text":"testex_options():","code":""},{"path":"/reference/testex-rd-example-helpers.html","id":null,"dir":"Reference","previous_headings":"","what":"Rd Example Parsing Helpers — testex-rd-example-helpers","title":"Rd Example Parsing Helpers — testex-rd-example-helpers","text":"Rd Example Parsing Helpers","code":""},{"path":"/reference/testex-rd-example-helpers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rd Example Parsing Helpers — testex-rd-example-helpers","text":"","code":"rd_extract_examples(rd)  rd_code_as_string(rd)  split_testonly_as_expr(rd)  split_testonly(rd)"},{"path":"/reference/testex-rd-example-helpers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rd Example Parsing Helpers — testex-rd-example-helpers","text":"rd Rd object","code":""},{"path":"/reference/testex-rd-example-helpers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rd Example Parsing Helpers — testex-rd-example-helpers","text":"examples section Rd object formatted Rd example interlaced list expressions, either representing example code tests. names list either \\testonly RDCODE depending originating source expression. list Rd tag contents","code":""},{"path":"/reference/testex-rd-example-helpers.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Rd Example Parsing Helpers — testex-rd-example-helpers","text":"rd_extract_examples(): Extract examples tag Rd file rd_code_as_string(): Convert Rd example string split_testonly_as_expr(): Split sections example evaluated example code blocks code blocks wrapped \\testonly Rd_tags, reassigning srcrefs example code split. split_testonly(): Split sections example lists Rd_tags. Note srcrefs split line number. line split two sections, attributed first section. used primarily giving line numbers test messages, sufficient providing test failures locations.","code":""},{"path":"/reference/testex-roxygen-tags.html","id":null,"dir":"Reference","previous_headings":"","what":"testex roxygen2 tags — testex-roxygen-tags","title":"testex roxygen2 tags — testex-roxygen-tags","text":"testex provides two new roxygen2 tags, @test @testthat.","code":""},{"path":"/reference/testex-roxygen-tags.html","id":"tags","dir":"Reference","previous_headings":"","what":"tags","title":"testex roxygen2 tags — testex-roxygen-tags","text":"testex tags sub-tags meant used within @examples block. considered tags within @examples block used construct blocks testing code within example code. @test: -line expectations test output previous command within example. . used within test expression, used refer output previous example command. Otherwise, result expression expected identical previous output.   @testthat: Similar @test, @testthat can used make -line assertions using testthat expectations. testthat expectations follow convention first argument object compare expected value characteristic. Since value always result previous example, part code implicitly constructed . want use example result elsewhere expectation, can refer .. used way, testex implicit modification expectation.","code":"#' @examples #' 1 + 2 #' @test 3 #' @test . == 3 #' #' @examples #' 3 + 4 #' @test identical(., 7) #' @examples #' 1 + 2 #' @testthat expect_equal(3) #' @testthat expect_gt(0) #' #' @examples #' 3 + 4 #' @testthat expect_equal(., 7)"},{"path":"/reference/testex-testthat.html","id":null,"dir":"Reference","previous_headings":"","what":"Support for testthat example expectations — testex-testthat","title":"Support for testthat example expectations — testex-testthat","text":"Various functions used produce native testthat experience, automatically converting testex tests testthat code executing tests produce informative messages failure.","code":""},{"path":"/reference/testex-testthat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Support for testthat example expectations — testex-testthat","text":"","code":"testthat_block(   ...,   value = get_example_value(),   obj = NULL,   example = NULL,   tests = NULL,   envir = parent.frame() )  with_srcref(src, expr, envir = parent.frame())  fallback_expect_no_error(object, ...)"},{"path":"/reference/testex-testthat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Support for testthat example expectations — testex-testthat","text":"... Additional arguments unused value symbol quote use refer subject testthat tests. obj optional object name used construct helpful error message testthat failure message. example option srcref_key string used indicate relevant example code originated . tests option srcref_key string used indicate relevant test code originated . envir environment expectations evaluated src srcref_key parsed produce artificial srcref expectation signaled messages. expr expression evaluated. expectation condition raised evaluation, srcref converted src. object expression evaluate","code":""},{"path":"/reference/testex-testthat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Support for testthat example expectations — testex-testthat","text":"result evaluating provided expressions result evaluating expr, expectation appended srcref information expectation raised. value produced expectation code","code":""},{"path":"/reference/testex-testthat.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Support for testthat example expectations — testex-testthat","text":"testex operates previous value produced example code. unlike testthat expectations, expect value provided first argument. accommodate native testthat interface, testex provides convenience functions make testex expectations run idiomatically style testthat.","code":""},{"path":"/reference/testex-testthat.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Support for testthat example expectations — testex-testthat","text":"testthat_block(): flavor testex inject .Last.value first argument expression - suitable using expect_* family functions testthat. Also handles temporarily attaching testthat package. with_srcref(): Retroactively assigns source file location expectation. allows testthat report origin code raised example test failure source roxygen2 code, even though test code reconstructed package documentation files. fallback_expect_no_error(): testthat expectation provided code can evaluated without producing error. basic expectation one expect example code. expectations provided subsequent testthat code.","code":""},{"path":"/reference/testex-testthat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Support for testthat example expectations — testex-testthat","text":"","code":"# example code 1 + 2 #> [1] 3  # within `testthat_block`, test code refers to previous result with `.` testthat_block({ # \\dontshow{   . <- 3 # needed because roxygen2 mutates .Last.value   # }   test_that(\"addition holds up\", {     expect_equal(., 3)   })    # `with_srcref` to spoof the source of the code that caused the failure   test_that(\"test failure is spoofed to report error at abc.R:1:0\", {     with_srcref(\"abc.R:1:3\", expect_equal(., 3))   }) }) #> Test passed 🥇 #> Test passed 🎊"},{"path":"/reference/testex.html","id":null,"dir":"Reference","previous_headings":"","what":"A syntactic helper for writing quick and easy example tests — testex","title":"A syntactic helper for writing quick and easy example tests — testex","text":"wrapper around stopifnot allows use . refer .Last.value preserve last non-test output example.","code":""},{"path":"/reference/testex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A syntactic helper for writing quick and easy example tests — testex","text":"","code":"testex(   ...,   value = get_example_value(),   obj = NULL,   example = NULL,   tests = NULL,   envir = parent.frame() )"},{"path":"/reference/testex.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A syntactic helper for writing quick and easy example tests — testex","text":"... Expressions evaluated. . replaced expression passed val, may used shorthand last example result. value value test . default, use example's .Last.value. obj optional object name used construct helpful error message testthat failure message. example option srcref_key string used indicate relevant example code originated . tests option srcref_key string used indicate relevant test code originated . envir environment tests evaluated. default parent environment tests evaluated.","code":""},{"path":"/reference/testex.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A syntactic helper for writing quick and easy example tests — testex","text":"Invisibly returns .Last.value existed prior evaluating test.","code":""},{"path":"/reference/testex.html","id":"documenting-with-testex","dir":"Reference","previous_headings":"","what":"Documenting with testex","title":"A syntactic helper for writing quick and easy example tests — testex","text":"testex simple wrapper around execution propagates .Last.value returned running, allowing chain tests easily.","code":""},{"path":"/reference/testex.html","id":"use-in-rd-files-","dir":"Reference","previous_headings":"","what":"Use in Rd files:","title":"A syntactic helper for writing quick and easy example tests — testex","text":"Rd files generally regarded bit cumbersome author directly. Instead, testex provide helpers generate style documentation, use function internally.","code":"\\examples{   f <- function(a, b) a + b   f(3, 4)   \\testonly{     testex::testex(       is.numeric(.),       identical(., 7)     )   } }"},{"path":"/reference/testex.html","id":"use-with-roxygen-","dir":"Reference","previous_headings":"","what":"Use with roxygen2","title":"A syntactic helper for writing quick and easy example tests — testex","text":"Within roxygen2 @examples block can instead use @test tag generate Rd code shown .","code":"#' @examples #' f <- function(a, b) a + b #' f(3, 4) #' @test is.numeric(.) #' @test identical(., 7)"},{"path":"/reference/use_testex.html","id":null,"dir":"Reference","previous_headings":"","what":"Add testex tags and configure package to fully use testex features — use_testex","title":"Add testex tags and configure package to fully use testex features — use_testex","text":"Add testex tags configure package fully use testex features","code":""},{"path":"/reference/use_testex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add testex tags and configure package to fully use testex features — use_testex","text":"","code":"use_testex(path = getwd(), check = TRUE, quiet = FALSE)"},{"path":"/reference/use_testex.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add testex tags and configure package to fully use testex features — use_testex","text":"path package source code working directory check logical value indicating whether tests executing R CMD check. quiet Whether output suppressed","code":""},{"path":"/reference/use_testex.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add testex tags and configure package to fully use testex features — use_testex","text":"result write.dcf() upon modifying package DESCRIPTION file.","code":""},{"path":"/reference/use_testex.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Add testex tags and configure package to fully use testex features — use_testex","text":"testex roxygen2 tags behave similarly roxygen2 @examples tags, minor addition wrapping code manage tests. means integrated @examples can intermixed @examples tags","code":""},{"path":"/reference/use_testex_as_testthat.html","id":null,"dir":"Reference","previous_headings":"","what":"Run examples as testthat expectations — use_testex_as_testthat","title":"Run examples as testthat expectations — use_testex_as_testthat","text":"Run examples testthat expectations","code":""},{"path":"/reference/use_testex_as_testthat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run examples as testthat expectations — use_testex_as_testthat","text":"","code":"use_testex_as_testthat(path = getwd(), context = \"testex\", quiet = FALSE)"},{"path":"/reference/use_testex_as_testthat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run examples as testthat expectations — use_testex_as_testthat","text":"path package source code working directory context testthat test context use basis new test filename. quiet Whether emit output messages.","code":""},{"path":"/reference/use_testex_as_testthat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run examples as testthat expectations — use_testex_as_testthat","text":"result writeLines() writing new testthat file.","code":""},{"path":"/reference/vapplys.html","id":null,"dir":"Reference","previous_headings":"","what":"vapply shorthand alternatives — vlapply","title":"vapply shorthand alternatives — vlapply","text":"Simple wrappers around vapply common data types","code":""},{"path":"/reference/vapplys.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"vapply shorthand alternatives — vlapply","text":"","code":"vlapply(..., FUN.VALUE = logical(1L))  vcapply(..., FUN.VALUE = character(1L))  vnapply(..., FUN.VALUE = numeric(1L))"},{"path":"/reference/vapplys.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"vapply shorthand alternatives — vlapply","text":"... Arguments passed vapply FUN.VALUE preset signature flavor vapply. exposed transparency, modifying break implicit contract function name return type.","code":""},{"path":"/reference/vapplys.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"vapply shorthand alternatives — vlapply","text":"result vapply","code":""},{"path":"/reference/with_attached.html","id":null,"dir":"Reference","previous_headings":"","what":"Temporarily attach a namespace — with_attached","title":"Temporarily attach a namespace — with_attached","text":"function primarily managing attaching namespaces needed testing internally. exported needed code generated within Rd files, otherwise unlikely needed.","code":""},{"path":"/reference/with_attached.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Temporarily attach a namespace — with_attached","text":"","code":"with_attached(ns, expr)"},{"path":"/reference/with_attached.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Temporarily attach a namespace — with_attached","text":"ns namespace namespace name attach expr expression evaluate namespace attached","code":""},{"path":"/reference/with_attached.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Temporarily attach a namespace — with_attached","text":"result evaluating expr","code":""},{"path":"/reference/wrap_expect_no_error.html","id":null,"dir":"Reference","previous_headings":"","what":"Wraps an example expression in a testthat expectation to not error — wrap_expect_no_error","title":"Wraps an example expression in a testthat expectation to not error — wrap_expect_no_error","text":"Wraps example expression testthat expectation error","code":""},{"path":"/reference/wrap_expect_no_error.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wraps an example expression in a testthat expectation to not error — wrap_expect_no_error","text":"","code":"wrap_expect_no_error(expr, value)"},{"path":"/reference/wrap_expect_no_error.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wraps an example expression in a testthat expectation to not error — wrap_expect_no_error","text":"expr expression wrap expect_no_error() expectation. Uses testthats version recent enough version available, provides fallback otherwise. value symbol use store result expr","code":""},{"path":"/reference/wrap_expect_no_error.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Wraps an example expression in a testthat expectation to not error — wrap_expect_no_error","text":"testthat::test_that() call","code":""},{"path":"/news/index.html","id":"testex-010","dir":"Changelog","previous_headings":"","what":"testex 0.1.0","title":"testex 0.1.0","text":"Initial CRAN submission","code":""}]
